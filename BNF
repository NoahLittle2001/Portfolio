< Program >			::= DRAGON < id > < param-list > FIRE < body > EXTINGUISH < Program' >

< Program' >    	::= < Program >
		   				| END

< param-list >		::= < param-dec >
		    			| <param-dec > COMMA < param-list >
		    			| ""

< body >			::= < line > < body >
		    			| ""

< line >			::= LTHANS < command > GTHANS

< command >			::= < create-var >
		    			| < reassign >
		    			| < loop >
		    			| < read >
		    			| < write >
		    			| < path >
		    			| < call >
		    			| < return >

< return >			::=  RETURN < expr >

< create-var >		::= BIG or SMALL < scope > < ref > DOLLAR
                    | BIG or SMALL < scope > < ref > ASSIGN < expr > DOLLAR

< reassign >		::=  < ref > DOLLAR
                    |  < ref > ASSIGN < expr > DOLLAR

< write >			::= SHOOT < list > DOLLAR

< list >			::= ID 
                | ID COMMA < list >
                | STRING
                | STRING COMMA < list >
                | NUMBER
                | NUMBER COMMA < list >
                | ""

< read >        	::= CONSUME < ref > DOLLAR

< loop >			::= BURN < condition > FIRE < body > EXTINGUISH

< path >			::= PATH < condition > HERE < body > HERE
                | PATH < condition > HERE < body > HERE THERE < body > THERE


< condition >		::= < comparable >
                  | < comparable > < EITHER > < condition >
                  | < comparable > < ALSO > < condition

< comparable >   	::= < expr > IS or LTHAN or LTHANEQ or GTHAN or GTHANEQ < expr

< expr >			::= < term > < expr' >

< expr' > 			::= PLUS < term > < expr' >
		    			| MINUS <term> < expr' >
		    			|""

< term >        	::= < factor > < term' >

< term' >			::= TIMES < factor > < term' >
		    			| DIVIDE < factor > < term' >
		    			| ""

< factor >      	::= < exponent > < factor' >
                   			| MINUS < exponent > < factor' >

< factor' > 		::= POW < factor >
						|""

< exponent > 		::= LCURLY < expr > RCURLY
                    	| < ref >
                    	| < literal >
                      | < call >

< ref >         	::= ID
                    | ID RPAREN <

< literal >     	::=  NUMBER
                    	| STRING

< call >        	::= HATCH ID LBRACKET < list > RBRACKET